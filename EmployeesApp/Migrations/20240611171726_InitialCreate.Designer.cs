// <auto-generated />
using EmployeesApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeesApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240611171726_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("EmployeesApp.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Floor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Floor = 1,
                            Name = "Frontend"
                        },
                        new
                        {
                            ID = 2,
                            Floor = 2,
                            Name = "Backend"
                        },
                        new
                        {
                            ID = 3,
                            Floor = 3,
                            Name = "DB"
                        });
                });

            modelBuilder.Entity("EmployeesApp.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeesApp.Models.EmployeeWorkExperience", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgrammingLanguageID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProgrammingLanguageID");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("EmployeesApp.Models.ProgrammingLang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ProgrammingLangs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "C#"
                        },
                        new
                        {
                            ID = 2,
                            Name = "JavaScript"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Python"
                        },
                        new
                        {
                            ID = 4,
                            Name = "T-SQL"
                        });
                });

            modelBuilder.Entity("EmployeesApp.Models.Employee", b =>
                {
                    b.HasOne("EmployeesApp.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeesApp.Models.EmployeeWorkExperience", b =>
                {
                    b.HasOne("EmployeesApp.Models.Employee", "Employee")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeesApp.Models.ProgrammingLang", "ProgrammingLanguage")
                        .WithMany()
                        .HasForeignKey("ProgrammingLanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ProgrammingLanguage");
                });

            modelBuilder.Entity("EmployeesApp.Models.Employee", b =>
                {
                    b.Navigation("WorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
